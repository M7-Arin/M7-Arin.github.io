<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo个人博客搭建过程记录</title>
      <link href="/HexoBlogBuilding.html"/>
      <url>/HexoBlogBuilding.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><p>本文主要记录笔者Hexo博客的搭建过程，操作系统：Windowns</p><h2 id="搭建流程"><a class="header-anchor" href="#搭建流程">¶</a>搭建流程</h2><ul><li>安装Git</li><li>安装Node.js</li><li>安装Hexo博客框架</li><li>注册GitHub账号并创建仓库</li><li>生成SSH密钥并添加到Github</li><li>Hexo部署</li><li>域名配置</li><li>主题选择与配置</li><li>博客备份</li><li>RSS订阅</li></ul><h2 id="安装Git"><a class="header-anchor" href="#安装Git">¶</a>安装Git</h2><p>笔者使用操作系统为Windows，进入Git官网即可下载安装<br>下载地址：<a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a><br>采用默认安装，只更换了安装路径，如需自定义安装，可网上寻找安装教程</p><h2 id="安装Node-js"><a class="header-anchor" href="#安装Node-js">¶</a>安装Node.js</h2><p>下载地址：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a><br>采用默认安装，只更换了安装路径，如需自定义安装，可网上寻找安装教程</p><h2 id="安装Hexo博客框架"><a class="header-anchor" href="#安装Hexo博客框架">¶</a>安装Hexo博客框架</h2><p>选择自己Hexo博客需要放置的盘符或目录，鼠标右键选择 Git Bash Here<br>输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>初始化Hexo(bolg为博客内容存放目录，可随意取名)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><p>进入博客目录，安装相关依赖</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>安装完成后，相关文件下下会生成一些目录与文件</p><ul><li><strong>node_modules</strong>  <font color=red>依赖包</font></li><li><strong>public</strong>  <font color=red>编译文件存放目录</font></li><li><strong>scaffolds</strong>  <font color=red>文章模板存放目录</font></li><li><strong>source</strong>  <font color=red>文章存放目录</font></li><li><strong>themes</strong>  <font color=red>主题存放目录</font></li><li><strong>_config.yml</strong>  <font color=red>博客配置文件</font></li></ul><p>编辑文件并进行本地预览</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>之后可可按 ctrl+c退出预览</p><h2 id="注册GitHub账号并创建仓库"><a class="header-anchor" href="#注册GitHub账号并创建仓库">¶</a>注册GitHub账号并创建仓库</h2><p>笔者已有GitHub账号，故省略创建步骤<br>登录后左上角选择 <strong>New</strong><br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/1-github20200517145305.png" alt=""><br>创建仓库&lt;用户名&gt;.github.io，笔者已经创建过，故会提示仓库已存在<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/2-github20200517150451.png" alt=""></p><h2 id="生成SSH密钥并添加到Github"><a class="header-anchor" href="#生成SSH密钥并添加到Github">¶</a>生成SSH密钥并添加到Github</h2><p>这一步不能省略，笔者第一次搭建时因为教程中缺少了这一步，导致博客一直无法推送成功<br>回到Git命令行界面<br>配置邮箱和用户名，用户名为GitHub用户名，邮箱为GitHub邮箱</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;邮箱&quot;</span><br></pre></td></tr></table></figure><p>查询是否配置成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure><p>创建SSH 邮箱为GitHub邮箱</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮箱&quot;</span><br></pre></td></tr></table></figure><p>需要连按三次回车键<br>生成后会提示你生成的文件放在哪个目录<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/3-github20200517152937.png" alt=""><br>用工具打开公钥文件复制其中的内容，点击用户头像选择<strong>Settings</strong>进入设置界面添加SSH密钥<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/4-github20200517154256.png" alt=""><br>将复制的公钥内容放入<strong>Key</strong>中<strong>Title</strong>可以随便填写<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/5-github20200517154512.png" alt=""><br>然后返回的GIT中的命令行界面输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>返回如下信息则设置成功<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/6-github20200517154922.png" alt=""></p><h2 id="HEXO部署"><a class="header-anchor" href="#HEXO部署">¶</a>HEXO部署</h2><p>打开博客目录下的**_config.yml**，修改<strong>name</strong>名称为GitHub的用户名</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;name&#x2F;name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装deploy-git插件，生成博客内容并推送至GitHub</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="域名配置"><a class="header-anchor" href="#域名配置">¶</a>域名配置</h2><p><a href="http://xn--GitHubname-3x2p550cy3l12o9i0kjhub0h6d.github.io" target="_blank" rel="noopener">GitHub博客默认网址为name.github.io</a>，如果嫌网址不好用，可以自定义域名<br>首先需要购买一个域名，阿里云、腾讯云等可以域名注册，根据后缀不同价格不同<br>笔者购买的是腾讯云域名<br>按要求实名认证后，购买域名，进入域名管理控制台选择域名解析<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/7-github20200517163808.png" alt=""><br>其中主机选**@** ，记录类型 选<strong>CNAME</strong>， 线路类型选<strong>默认</strong>，记录值填GitHub博客网址，只需填写这一条即可<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/8-github20200517164318.png" alt=""><br>登录GitHub进入博客仓库，选择<strong>Settings</strong>,下拉到底部，设置Custom domain值为购买的域名，点击保存即可，稍等几分钟即可使用购买的域名访问<br><img src="https://cdn.jsdelivr.net/gh/M7-Arin/PicGo/Img/9-github20200517170018.png" alt=""><br>由于GitHub属于域外空间，如果没有备案的需求，域名是可以不用备案的</p><h2 id="主题配置"><a class="header-anchor" href="#主题配置">¶</a>主题配置</h2><p>笔者主题为Butterfly ，配置方面推荐参考作者博客安装文档，远比其它配置文章要详细<br>博客地址：<a href="https://jerryc.me/" target="_blank" rel="noopener">https://jerryc.me/</a></p><h2 id="博客备份"><a class="header-anchor" href="#博客备份">¶</a>博客备份</h2><p>笔者博客备份使用插件：<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="noopener">hexo-git-backup</a><br>使用命令查看Hexo版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>2.x.x使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-git-backup@0.0.91 --save</span><br></pre></td></tr></table></figure><p>3.x.x使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><p>博客配置文件**_config.yml**配置，repository中填写备份的GitHub仓库地址和分支</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">backup:</span><br><span class="line">   type: git</span><br><span class="line">   repository:</span><br><span class="line">      github: git@github.com:M7-Arin&#x2F;BlogBackup.git,master</span><br></pre></td></tr></table></figure><p>如果需要选择主题备份</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">backup:</span><br><span class="line">   type: git</span><br><span class="line">   theme: Butterfly</span><br><span class="line">   repository:</span><br><span class="line">      github: git@github.com:M7-Arin&#x2F;M7-Arin.github.io.git,backup</span><br></pre></td></tr></table></figure><p>使用命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo b</span><br></pre></td></tr></table></figure><p>即可完成备份<br>笔者备份过程中出现过备份空博客的异常，最后采用删除博客目录中git目录后重新备份得到解决</p><h2 id="RSS订阅"><a class="header-anchor" href="#RSS订阅">¶</a>RSS订阅</h2><p>RSS订阅功能使用插件<a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>博客配置文件**_config.yml**配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#订阅RSS</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></table></figure><ul><li>type: RSS的类型(atom/rss2)</li><li>path: 文件路径，默认是 atom.xml/rss2.xml</li><li>limit: 展示文章的数量,使用 0 或则 false 代表展示全部</li><li>hub: URL of the PubSubHubbub hubs (如果使用不到可以为空)</li><li>content: （可选）设置 true 可以在 RSS 文件中包含文章全部内容，默认：false</li><li>content_limit: （可选）摘要中使用的帖子内容的默认长度。 仅在内容设置为false且未显示自定义帖子描述时才使用。</li><li>content_limit_delim: （可选）如果content_limit用于缩短post内容，则仅在此分隔符的最后一次出现时进行剪切，然后才达到字符限制。默认不使用。</li><li>icon: （可选）自定义订阅图标，默认设置为主配置中指定的图标。</li><li>order_by: 订阅内容的顺序。 (默认: -date)<br>然后配置主题的_config.yml，添加</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><p>重新编译博客内容即可在public文件夹生成<strong>atom.xml</strong>文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>主页配置RSS图标并添加自己的RSS地址<br>至此，RSS订阅功能添加成功</p><hr><p>未完待续 😄</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
